{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","width","height","src","alt","FormControl","Input","placeholder","value","onChange","event","target","IconButton","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAqBeA,G,MAjBCC,sBAAW,WAAwBC,GAAS,IAA9BC,EAA6B,EAA7BA,QACtBC,EADmD,EAApBC,WACTF,EAAQE,SAEpC,OACE,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,iBAA/C,SACE,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAS,oBAAsB,qBAAhD,SACE,cAACI,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAYC,MAAM,QAAQC,QAAQ,KAAKC,UAAU,KAAjD,WACIR,GAAD,UAAcD,EAAQE,UAAY,eAAlC,MAAsD,IACtDF,EAAQA,qB,QCENU,EAbKC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,iDACZC,YAAa,wDACbC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,Y,iCC4ERC,MA/Ef,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGmBJ,mBAAS,IAH5B,mBAGNrB,EAHM,KAGI0B,EAHJ,KAqCb,OA7BAC,qBAAU,WAERnB,EAAGoB,WAAW,YACXC,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXN,EACEM,EAASC,KAAKC,KAAI,SAACC,GAAD,MAAU,CAC1BC,GAAID,EAAIC,GACRrC,QAASoC,EAAIE,iBAIpB,IAEHT,qBAAU,WACRD,EAAYW,OAAO,6BAClB,IAcD,sBAAKpC,UAAU,MAAf,UACE,qBACEqC,MAAM,QACNC,OAAO,QACPC,IAAI,sFACJC,IAAI,KAEN,2CACA,0CAAazC,KAEb,sBAAMC,UAAU,YAAhB,SACE,eAACyC,EAAA,EAAD,CAAazC,UAAU,mBAAvB,UACE,cAAC0C,EAAA,EAAD,CACE1C,UAAU,aACV2C,YAAY,qBACZC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAWxB,EAASwB,EAAMC,OAAOH,UAG7C,cAACI,EAAA,EAAD,CACEhD,UAAU,kBACViD,UAAW5B,EACXhB,QAAQ,YACRD,MAAM,UACN8C,KAAK,SACLC,QArCU,SAACL,GACnBA,EAAMM,iBAEN7C,EAAGoB,WAAW,YAAY0B,IAAI,CAC5BtD,SAAUA,EACVF,QAASwB,EACTiC,UAAW9C,IAASU,UAAUqC,WAAWC,oBAE3ClC,EAAS,KAuBH,SAQE,cAAC,IAAD,WAKN,cAAC,IAAD,UACGC,EAASS,KAAI,gBAAGE,EAAH,EAAGA,GAAIrC,EAAP,EAAOA,QAAP,OACZ,cAAC,EAAD,CAAkBE,SAAUA,EAAUF,QAASA,GAAjCqC,YCtETuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c8be2f2d.chunk.js","sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./Message.css\";\r\n\r\nconst Message = forwardRef(({ message, username }, ref) => {\r\n  const isUser = username === message.username;\r\n\r\n  return (\r\n    <div ref={ref} className={`message ${isUser && \"message__user\"}`}>\r\n      <Card className={isUser ? \"message__userCard\" : \"message__guestCard\"}>\r\n        <CardContent>\r\n          <Typography color=\"white\" variant=\"h5\" component=\"h2\">\r\n            {!isUser && `${message.username || \"Unknown User\"}: `}{\" \"}\r\n            {message.message}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Message;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyB0oLy7iJ8g7KmfdBlX7MpJmKCss3ZZFCE\",\r\n  authDomain: \"facebook-messenger-clone-4869f.firebaseapp.com\",\r\n  databaseURL: \"https://facebook-messenger-clone-4869f.firebaseio.com\",\r\n  projectId: \"facebook-messenger-clone-4869f\",\r\n  storageBucket: \"facebook-messenger-clone-4869f.appspot.com\",\r\n  messagingSenderId: \"426854794805\",\r\n  appId: \"1:426854794805:web:41cea271761e007d40537c\",\r\n  measurementId: \"G-C5CSTPXR1T\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Button, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport \"./App.css\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport FlipMove from \"react-flip-move\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { IconButton } from \"@material-ui/core\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  // useState = variable in REACT\n  // useEffect = run code on a condition in REACT\n\n  useEffect(() => {\n    // run once when the app component loads\n    db.collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setMessages(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            message: doc.data(),\n          }))\n        );\n      });\n  }, []);\n\n  useEffect(() => {\n    setUsername(prompt(\"Please enter your name\"));\n  }, []); // condition\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    db.collection(\"messages\").add({\n      username: username,\n      message: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <img\n        width=\"100px\"\n        height=\"100px\"\n        src=\"https://logodownload.org/wp-content/uploads/2017/04/facebook-messenger-logo-02.png?\"\n        alt=\"\"\n      />\n      <h1>Messanger</h1>\n      <h2>Welcome {username}</h2>\n\n      <form className=\"app__form\">\n        <FormControl className=\"app__formControl\">\n          <Input\n            className=\"app__input\"\n            placeholder=\"Enter a message...\"\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n\n          <IconButton\n            className=\"app__iconButton\"\n            disabled={!input}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={sendMessage}\n          >\n            <SendIcon />\n          </IconButton>\n        </FormControl>\n      </form>\n\n      <FlipMove>\n        {messages.map(({ id, message }) => (\n          <Message key={id} username={username} message={message} />\n        ))}\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}